#!/usr/bin/env python
# -*- coding: utf-8 -*-

from __future__ import print_function
import os
import math
from math import cos, sin
from datetime import datetime
import numpy as np

# define the constants
h = 0.007               # the base plate height (in m)
rfoam = .04337          # m
g = 9.8                 # m/s^2

def get_N(x, m, s):
    """
    input: x = variables that make up N matrix
        i.e thetas, heights, masses, etc.  
    output: New mass matrix we use

    """
    theta1, theta2, theta3, theta4, theta5, theta6, theta7, theta8, theta9 = x[:, 0]
    m1, m2, m3, m4, m5, m6, m7, m8, m9 = m
    # print(f"our m1: {m1}\n")
    # print(f"our theta5: {theta5}\n")
    L1 = s/5 
    L3 = s/5 
    L5 = s/5 
    L6 = s/5 
    L8 = s/5 
    r1 = L1/2 
    r3 = L1/2 
    r5 = L1/2 
    r6 = L1/2 
    r8 = L1/2
    h_1 = L1 
    N =np.array([[g*m3*(h*sin(theta1) - (cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - sin(theta1)*sin(theta2)*sin(theta4))*(L1 + h + r3) + (L1 + h)*(cos(theta4) - 1)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + cos(theta1)*sin(theta3)*(L1 + h) + h*sin(theta1)*(cos(theta2) - 1) - sin(theta1)*sin(theta2)*sin(theta4)*(L1 + h) + cos(theta2)*sin(theta1)*(L1 + h)*(cos(theta3) - 1)) + g*m8*(h*sin(theta1) + (cos(theta9)*(cos(theta8)*(sin(theta7)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + cos(theta4)*sin(theta1)*sin(theta2)) - cos(theta7)*(cos(theta6)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta6)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))) + sin(theta8)*(sin(theta6)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - sin(theta1)*sin(theta2)*sin(theta4)) - cos(theta6)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))) + sin(theta9)*(cos(theta7)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + cos(theta4)*sin(theta1)*sin(theta2)) + sin(theta7)*(cos(theta6)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta6)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))))*(L1 + L3 + L5 + L6 + h + r8) - theta5*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - sin(theta1)*sin(theta2)*sin(theta4)) - (cos(theta8) - 1)*(sin(theta7)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + cos(theta4)*sin(theta1)*sin(theta2)) - cos(theta7)*(cos(theta6)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta6)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))*(L1 + L3 + L5 + L6 + h) - sin(theta7)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + cos(theta4)*sin(theta1)*sin(theta2))*(L1 + L3 + L5 + h) + (L1 + h)*(cos(theta4) - 1)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + cos(theta1)*sin(theta3)*(L1 + h) - (cos(theta9) - 1)*(cos(theta8)*(sin(theta7)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + cos(theta4)*sin(theta1)*sin(theta2)) - cos(theta7)*(cos(theta6)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta6)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))) + sin(theta8)*(sin(theta6)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - sin(theta1)*sin(theta2)*sin(theta4)) - cos(theta6)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))*(L1 + L3 + L5 + L6 + h) + (cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - sin(theta1)*sin(theta2)*sin(theta4))*(cos(theta6) - 1)*(L1 + L3 + L5 + h) + sin(theta6)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))*(L1 + L3 + L5 + h) - sin(theta8)*(sin(theta6)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - sin(theta1)*sin(theta2)*sin(theta4)) - cos(theta6)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))*(L1 + L3 + L5 + L6 + h) - sin(theta9)*(cos(theta7)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + cos(theta4)*sin(theta1)*sin(theta2)) + sin(theta7)*(cos(theta6)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta6)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))*(L1 + L3 + L5 + L6 + h) + (cos(theta7) - 1)*(cos(theta6)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta6)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))*(L1 + L3 + L5 + h) + h*sin(theta1)*(cos(theta2) - 1) - sin(theta1)*sin(theta2)*sin(theta4)*(L1 + h) + cos(theta2)*sin(theta1)*(L1 + h)*(cos(theta3) - 1)) + g*m5*(h*sin(theta1) - (cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - sin(theta1)*sin(theta2)*sin(theta4))*(L1 + L3 + h + r5) - theta5*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - sin(theta1)*sin(theta2)*sin(theta4)) + (L1 + h)*(cos(theta4) - 1)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + cos(theta1)*sin(theta3)*(L1 + h) + h*sin(theta1)*(cos(theta2) - 1) - sin(theta1)*sin(theta2)*sin(theta4)*(L1 + h) + cos(theta2)*sin(theta1)*(L1 + h)*(cos(theta3) - 1)) + g*m1*(h*sin(theta1) - cos(theta2)*sin(theta1)*(h + r1) + h*sin(theta1)*(cos(theta2) - 1)) + g*m6*(h*sin(theta1) + (sin(theta7)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + cos(theta4)*sin(theta1)*sin(theta2)) - cos(theta7)*(cos(theta6)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta6)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))*(L1 + L3 + L5 + h + r6) - theta5*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - sin(theta1)*sin(theta2)*sin(theta4)) - sin(theta7)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + cos(theta4)*sin(theta1)*sin(theta2))*(L1 + L3 + L5 + h) + (L1 + h)*(cos(theta4) - 1)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + cos(theta1)*sin(theta3)*(L1 + h) + (cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - sin(theta1)*sin(theta2)*sin(theta4))*(cos(theta6) - 1)*(L1 + L3 + L5 + h) + sin(theta6)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))*(L1 + L3 + L5 + h) + (cos(theta7) - 1)*(cos(theta6)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta6)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))*(L1 + L3 + L5 + h) + h*sin(theta1)*(cos(theta2) - 1) - sin(theta1)*sin(theta2)*sin(theta4)*(L1 + h) + cos(theta2)*sin(theta1)*(L1 + h)*(cos(theta3) - 1))], [g*m5*(h*cos(theta1)*sin(theta2) - theta5*(cos(theta1)*cos(theta2)*sin(theta4) + cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) - (cos(theta1)*cos(theta2)*sin(theta4) + cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2))*(L1 + L3 + h + r5) + cos(theta1)*cos(theta2)*sin(theta4)*(L1 + h) + cos(theta1)*sin(theta2)*(L1 + h)*(cos(theta3) - 1) + cos(theta1)*cos(theta3)*sin(theta2)*(L1 + h)*(cos(theta4) - 1)) + g*m8*(sin(theta7)*(cos(theta1)*cos(theta2)*cos(theta4) - cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4))*(L1 + L3 + L5 + h) - theta5*(cos(theta1)*cos(theta2)*sin(theta4) + cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) - (cos(theta9)*(cos(theta8)*(sin(theta7)*(cos(theta1)*cos(theta2)*cos(theta4) - cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4)) + cos(theta7)*(cos(theta6)*(cos(theta1)*cos(theta2)*sin(theta4) + cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) - cos(theta1)*sin(theta2)*sin(theta3)*sin(theta6))) - sin(theta8)*(sin(theta6)*(cos(theta1)*cos(theta2)*sin(theta4) + cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) + cos(theta1)*cos(theta6)*sin(theta2)*sin(theta3))) + sin(theta9)*(cos(theta7)*(cos(theta1)*cos(theta2)*cos(theta4) - cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4)) - sin(theta7)*(cos(theta6)*(cos(theta1)*cos(theta2)*sin(theta4) + cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) - cos(theta1)*sin(theta2)*sin(theta3)*sin(theta6))))*(L1 + L3 + L5 + L6 + h + r8) + (cos(theta8) - 1)*(sin(theta7)*(cos(theta1)*cos(theta2)*cos(theta4) - cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4)) + cos(theta7)*(cos(theta6)*(cos(theta1)*cos(theta2)*sin(theta4) + cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) - cos(theta1)*sin(theta2)*sin(theta3)*sin(theta6)))*(L1 + L3 + L5 + L6 + h) + (cos(theta1)*cos(theta2)*sin(theta4) + cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2))*(cos(theta6) - 1)*(L1 + L3 + L5 + h) + h*cos(theta1)*sin(theta2) + (cos(theta8)*(sin(theta7)*(cos(theta1)*cos(theta2)*cos(theta4) - cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4)) + cos(theta7)*(cos(theta6)*(cos(theta1)*cos(theta2)*sin(theta4) + cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) - cos(theta1)*sin(theta2)*sin(theta3)*sin(theta6))) - sin(theta8)*(sin(theta6)*(cos(theta1)*cos(theta2)*sin(theta4) + cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) + cos(theta1)*cos(theta6)*sin(theta2)*sin(theta3)))*(cos(theta9) - 1)*(L1 + L3 + L5 + L6 + h) - sin(theta8)*(sin(theta6)*(cos(theta1)*cos(theta2)*sin(theta4) + cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) + cos(theta1)*cos(theta6)*sin(theta2)*sin(theta3))*(L1 + L3 + L5 + L6 + h) + sin(theta9)*(cos(theta7)*(cos(theta1)*cos(theta2)*cos(theta4) - cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4)) - sin(theta7)*(cos(theta6)*(cos(theta1)*cos(theta2)*sin(theta4) + cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) - cos(theta1)*sin(theta2)*sin(theta3)*sin(theta6)))*(L1 + L3 + L5 + L6 + h) + (cos(theta7) - 1)*(cos(theta6)*(cos(theta1)*cos(theta2)*sin(theta4) + cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) - cos(theta1)*sin(theta2)*sin(theta3)*sin(theta6))*(L1 + L3 + L5 + h) + cos(theta1)*cos(theta2)*sin(theta4)*(L1 + h) + cos(theta1)*sin(theta2)*(L1 + h)*(cos(theta3) - 1) + cos(theta1)*cos(theta3)*sin(theta2)*(L1 + h)*(cos(theta4) - 1) - cos(theta1)*sin(theta2)*sin(theta3)*sin(theta6)*(L1 + L3 + L5 + h)) - g*m1*(cos(theta1)*sin(theta2)*(h + r1) - h*cos(theta1)*sin(theta2)) + g*m3*(h*cos(theta1)*sin(theta2) - (cos(theta1)*cos(theta2)*sin(theta4) + cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2))*(L1 + h + r3) + cos(theta1)*cos(theta2)*sin(theta4)*(L1 + h) + cos(theta1)*sin(theta2)*(L1 + h)*(cos(theta3) - 1) + cos(theta1)*cos(theta3)*sin(theta2)*(L1 + h)*(cos(theta4) - 1)) + g*m6*(sin(theta7)*(cos(theta1)*cos(theta2)*cos(theta4) - cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4))*(L1 + L3 + L5 + h) - theta5*(cos(theta1)*cos(theta2)*sin(theta4) + cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) - (sin(theta7)*(cos(theta1)*cos(theta2)*cos(theta4) - cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4)) + cos(theta7)*(cos(theta6)*(cos(theta1)*cos(theta2)*sin(theta4) + cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) - cos(theta1)*sin(theta2)*sin(theta3)*sin(theta6)))*(L1 + L3 + L5 + h + r6) + (cos(theta1)*cos(theta2)*sin(theta4) + cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2))*(cos(theta6) - 1)*(L1 + L3 + L5 + h) + h*cos(theta1)*sin(theta2) + (cos(theta7) - 1)*(cos(theta6)*(cos(theta1)*cos(theta2)*sin(theta4) + cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) - cos(theta1)*sin(theta2)*sin(theta3)*sin(theta6))*(L1 + L3 + L5 + h) + cos(theta1)*cos(theta2)*sin(theta4)*(L1 + h) + cos(theta1)*sin(theta2)*(L1 + h)*(cos(theta3) - 1) + cos(theta1)*cos(theta3)*sin(theta2)*(L1 + h)*(cos(theta4) - 1) - cos(theta1)*sin(theta2)*sin(theta3)*sin(theta6)*(L1 + L3 + L5 + h))], [g*m3*((L1 + h)*(cos(theta4) - 1)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)) - cos(theta4)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))*(L1 + h + r3) + cos(theta3)*sin(theta1)*(L1 + h) + cos(theta1)*cos(theta2)*sin(theta3)*(L1 + h)) - g*m8*((sin(theta9)*(sin(theta7)*(sin(theta6)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta4)*cos(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))) - cos(theta7)*sin(theta4)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))) - cos(theta9)*(cos(theta8)*(cos(theta7)*(sin(theta6)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta4)*cos(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))) + sin(theta4)*sin(theta7)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))) + sin(theta8)*(cos(theta6)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta4)*sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))))*(L1 + L3 + L5 + L6 + h + r8) - sin(theta9)*(sin(theta7)*(sin(theta6)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta4)*cos(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))) - cos(theta7)*sin(theta4)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))*(L1 + L3 + L5 + L6 + h) - (L1 + h)*(cos(theta4) - 1)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)) + theta5*cos(theta4)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)) - cos(theta3)*sin(theta1)*(L1 + h) + sin(theta6)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3))*(L1 + L3 + L5 + h) + (cos(theta8) - 1)*(cos(theta7)*(sin(theta6)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta4)*cos(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))) + sin(theta4)*sin(theta7)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))*(L1 + L3 + L5 + L6 + h) + sin(theta8)*(cos(theta6)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta4)*sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))*(L1 + L3 + L5 + L6 + h) + (cos(theta7) - 1)*(sin(theta6)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta4)*cos(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))*(L1 + L3 + L5 + h) + (cos(theta9) - 1)*(cos(theta8)*(cos(theta7)*(sin(theta6)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta4)*cos(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))) + sin(theta4)*sin(theta7)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))) + sin(theta8)*(cos(theta6)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta4)*sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))*(L1 + L3 + L5 + L6 + h) - cos(theta1)*cos(theta2)*sin(theta3)*(L1 + h) + sin(theta4)*sin(theta7)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))*(L1 + L3 + L5 + h) - cos(theta4)*(cos(theta6) - 1)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))*(L1 + L3 + L5 + h)) + g*m5*((L1 + h)*(cos(theta4) - 1)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)) - theta5*cos(theta4)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)) + cos(theta3)*sin(theta1)*(L1 + h) - cos(theta4)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))*(L1 + L3 + h + r5) + cos(theta1)*cos(theta2)*sin(theta3)*(L1 + h)) + g*m6*((cos(theta7)*(sin(theta6)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta4)*cos(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))) + sin(theta4)*sin(theta7)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))*(L1 + L3 + L5 + h + r6) + (L1 + h)*(cos(theta4) - 1)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)) - theta5*cos(theta4)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)) + cos(theta3)*sin(theta1)*(L1 + h) - sin(theta6)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3))*(L1 + L3 + L5 + h) - (cos(theta7) - 1)*(sin(theta6)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta4)*cos(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))*(L1 + L3 + L5 + h) + cos(theta1)*cos(theta2)*sin(theta3)*(L1 + h) - sin(theta4)*sin(theta7)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))*(L1 + L3 + L5 + h) + cos(theta4)*(cos(theta6) - 1)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))*(L1 + L3 + L5 + h))], [g*m3*((sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2))*(L1 + h + r3) - sin(theta4)*(L1 + h)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)*(L1 + h)) - g*m6*(sin(theta7)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4))*(L1 + L3 + L5 + h) - theta5*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2)) - (sin(theta7)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) + cos(theta6)*cos(theta7)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2)))*(L1 + L3 + L5 + h + r6) + (sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2))*(cos(theta6) - 1)*(L1 + L3 + L5 + h) + sin(theta4)*(L1 + h)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2)*(L1 + h) + cos(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2))*(cos(theta7) - 1)*(L1 + L3 + L5 + h)) - g*m8*(sin(theta7)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4))*(L1 + L3 + L5 + h) - theta5*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2)) - (sin(theta9)*(cos(theta7)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta6)*sin(theta7)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2))) + cos(theta9)*(cos(theta8)*(sin(theta7)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) + cos(theta6)*cos(theta7)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2))) - sin(theta6)*sin(theta8)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2))))*(L1 + L3 + L5 + L6 + h + r8) + sin(theta9)*(cos(theta7)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta6)*sin(theta7)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2)))*(L1 + L3 + L5 + L6 + h) + (cos(theta9) - 1)*(cos(theta8)*(sin(theta7)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) + cos(theta6)*cos(theta7)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2))) - sin(theta6)*sin(theta8)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2)))*(L1 + L3 + L5 + L6 + h) + (sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2))*(cos(theta6) - 1)*(L1 + L3 + L5 + h) + (cos(theta8) - 1)*(sin(theta7)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) + cos(theta6)*cos(theta7)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2)))*(L1 + L3 + L5 + L6 + h) + sin(theta4)*(L1 + h)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2)*(L1 + h) + cos(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2))*(cos(theta7) - 1)*(L1 + L3 + L5 + h) - sin(theta6)*sin(theta8)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2))*(L1 + L3 + L5 + L6 + h)) + g*m5*((sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2))*(L1 + L3 + h + r5) + theta5*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2)) - sin(theta4)*(L1 + h)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)*(L1 + h))], [- g*m5*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) - g*m6*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) - g*m8*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4))], [- g*m8*(sin(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4))*(L1 + L3 + L5 + h) - (cos(theta9)*(sin(theta8)*(cos(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))) + cos(theta7)*cos(theta8)*(sin(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))) - sin(theta7)*sin(theta9)*(sin(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))*(L1 + L3 + L5 + L6 + h + r8) + (cos(theta9) - 1)*(sin(theta8)*(cos(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))) + cos(theta7)*cos(theta8)*(sin(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))*(L1 + L3 + L5 + L6 + h) - cos(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))*(L1 + L3 + L5 + h) + sin(theta8)*(cos(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))*(L1 + L3 + L5 + L6 + h) + (cos(theta7) - 1)*(sin(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))*(L1 + L3 + L5 + h) - sin(theta7)*sin(theta9)*(sin(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))*(L1 + L3 + L5 + L6 + h) + cos(theta7)*(cos(theta8) - 1)*(sin(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))*(L1 + L3 + L5 + L6 + h)) - g*m6*(sin(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4))*(L1 + L3 + L5 + h) - cos(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))*(L1 + L3 + L5 + h) + (cos(theta7) - 1)*(sin(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))*(L1 + L3 + L5 + h) - cos(theta7)*(sin(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))*(L1 + L3 + L5 + h + r6))], [- g*m8*((sin(theta9)*(sin(theta7)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2)) - cos(theta7)*(cos(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))) - cos(theta8)*cos(theta9)*(cos(theta7)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2)) + sin(theta7)*(cos(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))))*(L1 + L3 + L5 + L6 + h + r8) + sin(theta7)*(cos(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))*(L1 + L3 + L5 + h) - sin(theta9)*(sin(theta7)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2)) - cos(theta7)*(cos(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))*(L1 + L3 + L5 + L6 + h) + (cos(theta8) - 1)*(cos(theta7)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2)) + sin(theta7)*(cos(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))*(L1 + L3 + L5 + L6 + h) + cos(theta7)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2))*(L1 + L3 + L5 + h) + cos(theta8)*(cos(theta9) - 1)*(cos(theta7)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2)) + sin(theta7)*(cos(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))*(L1 + L3 + L5 + L6 + h)) - g*m6*(sin(theta7)*(cos(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))*(L1 + L3 + L5 + h) - (cos(theta7)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2)) + sin(theta7)*(cos(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))*(L1 + L3 + L5 + h + r6) + cos(theta7)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2))*(L1 + L3 + L5 + h))], [-g*m8*((cos(theta9) - 1)*(cos(theta8)*(sin(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))) - sin(theta8)*(sin(theta7)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2)) - cos(theta7)*(cos(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))))*(L1 + L3 + L5 + L6 + h) - cos(theta9)*(cos(theta8)*(sin(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))) - sin(theta8)*(sin(theta7)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2)) - cos(theta7)*(cos(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))))*(L1 + L3 + L5 + L6 + h + r8) + cos(theta8)*(sin(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))*(L1 + L3 + L5 + L6 + h) - sin(theta8)*(sin(theta7)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2)) - cos(theta7)*(cos(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))*(L1 + L3 + L5 + L6 + h))], [g*m8*((cos(theta9)*(cos(theta7)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2)) + sin(theta7)*(cos(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))) - sin(theta9)*(cos(theta8)*(sin(theta7)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2)) - cos(theta7)*(cos(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))) + sin(theta8)*(sin(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))))*(L1 + L3 + L5 + L6 + h + r8) - cos(theta9)*(cos(theta7)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2)) + sin(theta7)*(cos(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))*(L1 + L3 + L5 + L6 + h) + sin(theta9)*(cos(theta8)*(sin(theta7)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*cos(theta4)*sin(theta2)) - cos(theta7)*(cos(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))) + sin(theta8)*(sin(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))*(L1 + L3 + L5 + L6 + h))]])


    return N

# get_N(np.array([1,2,3,4,5,6,7,8,9]).reshape(-1,1), [1,2,3,4,5,6,7,8,9], 10)